openapi: 3.0.0
info:
    title: Tigertix API
    version: 1.0.0
    description: API for the Tigertix ticket selling app

servers:
    - url: https://api.tigertix.com/v1

paths:
    # /users:
    #     post:
    #         summary: Create a new user account
    #         operationId: createUser
    #         tags:
    #             - User Account Service
    #         requestBody:
    #             required: true
    #             content:
    #                 application/json:
    #                     schema:
    #                         $ref: "#/components/schemas/User/createAccount" 
    #         responses:
    #             "201":
    #                 description: User created successfully
    #             "400":
    #                 description: Invalid user data

    /users/{userId}:
        get:
            summary: Get user account details
            operationId: getUserById
            tags:
                - User Account Service
            parameters:
                - name: userId
                  in: path
                  required: true
                  schema:
                      type: string
            responses:
                "200":
                    description: User details retrieved successfully
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/User'
                "404":
                    description: User not found

        put:
            summary: Update user account details
            operationId: updateUser
            tags:
                - User Account Service
            parameters:
                - name: firstName
                  in: path
                  required: true
                  schema: 
                    type: string
                - name: lastName
                  in: path
                  required: true
                  schema:
                    type: string
                - name: cuid
                  in: path
                  required: true
                  schema:
                    type: string

            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/User"
            responses:
                "200":
                    description: User updated successfully
                "404":
                    description: User not found

    /signup:
        post:
            summary: Sign up for a new user account
            operationId: signUp
            tags:
                - Sign up Service
            parameters:
              - name: username
                in: query
                required: true
                schema:
                    type: string
              - name: email
                in: query
                required: true
                schema:
                    type: string
              - name: password
                in: query
                required: true
                schema:
                    type: string
              - name: firstName
                in: query
                required: true
                schema:
                    type: string
              - name: lastName
                in: query
                required: true
                schema:
                    type: string
              - name: cuid
                in: query
                schema:
                    type: string    

            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/User"

            responses:
                "201":
                    description: Sign up successful
                "400":
                    description: Invalid sign up data

    /verify:
        post:
            summary: Verify account credentials
            operationId: verifyCredentials
            tags:
                - Verification Service

            parameters:
              - name: email
                in: query
                required: true
                schema:
                    type: string
              - name: username
                in: query
                required: true
                schema:
                    type: string
              - name: cuid
                in: query
                required: true
                schema:
                    type: string
            
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Verification"
            responses:
                "200":
                    description: Verification successful
                "401":
                    description: Invalid credentials

    /verify/cuid:
        post:
            summary: Verify a CU ID
            operationId: verifyCUID
            tags:
                - CU ID Verification Service
            
            parameters:
              - name: cuid
                in: query
                required: true
                schema:
                    type: string
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Verification"
            responses:
                "200":
                    description: CUID verification successful
                "400":
                    description: Invalid CUID

    /notifications:
        post:
            summary: Send a notification
            operationId: sendNotification
            tags:
                - Notification Service

            parameters:
              - name: userId
                in: query
                required: true
                schema:
                    type: string
              - name: message
                in: query
                required: true
                schema:
                    type: string

            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Notification"
            responses:
                "200":
                    description: Notification sent successfully

    /purchases:
        post:
            summary: Make a purchase
            operationId: makePurchase
            tags:
                - Purchasing Service

            parameters:
              - name: userId
                in: query
                required: true
                schema:
                    type: string
              - name: amount
                in: query
                required: true
                schema:
                    type: number

              - name: ticketIds
                in: query
                required: true
                schema:
                    type: array
                    items:
                        type: string
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Purchase"
            responses:
                "200":
                    description: Purchase successful
                "400":
                    description: Invalid purchase data
                "402":
                    description: Payment required
    /purchases/verify:
        post:
            summary: Verify a purchase making sure tickets are not already sold
            operationId: verifyPurchase
            tags:
                - Purchasing Service

            parameters:
              - name: userId
                in: query
                required: true
                schema:
                    type: string
              - name: amount
                in: query
                required: true
                schema:
                    type: number

              - name: ticketIds
                in: query
                required: true
                schema:
                    type: array
                    items:
                        type: string
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Verification"
            responses:
                "200":
                    description: Purchase verified successfully
                "400":
                    description: Invalid tickets
                "402":
                    description: Payment required
    /payments:
        post:
            summary: Add a payment method
            operationId: addPaymentMethod
            tags:
                - Payment Service

            parameters: 
              - name: userId
                in: query
                required: true
                schema:
                    type: string
              - name: type
                in: query
                required: true
                schema:
                    type: string
              - name: cardNumber
                in: query
                required: true
                schema:
                    type: string
              - name: cardHolderName
                in: query
                required: true
                schema:
                    type: string    
              - name: expirationDate
                in: query
                required: true
                schema:
                    type: string
              - name: cvv
                in: query
                required: true
                schema:
                    type: string

            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/PaymentMethod"
            responses:
                "201":
                    description: Payment method added successfully
                "400":
                    description: Invalid payment data

        get:
            summary: Get payment methods for a user
            operationId: getPaymentMethods
            tags:
                - Payment Service
            parameters:
                - name: userId
                  in: query
                  required: true
                  schema:
                      type: string
            responses:
                "200":
                    description: Payment methods retrieved successfully
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: "#/components/schemas/PaymentMethod"
                "404":
                    description: User not found

    /tickets/{ticketId}/transfer:
        post:
            summary: Transfer a ticket to another user
            operationId: transferTicket
            tags:
                - Ticket Transfer Service
            parameters:
                - name: ticketId
                  in: path
                  required: true
                  schema:
                      type: string
                - name: fromUserId
                  in: query
                  required: true
                  schema:
                      type: string
                - name: toUserId
                  in: query
                  required: true
                  schema:
                      type: string
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/TicketTransfer"
            responses:
                "200":
                    description: Ticket transferred successfully
                "400":
                    description: Invalid transfer data
                "404":
                    description: Ticket not found

    /events:
        post:
            summary: Create a new event
            operationId: createEvent
            tags:
                - Event Service
            parameters:
              - name: eventName
                in: query
                required: true
                schema:
                    type: string
              - name: description
                in: query
                required: true
                schema:
                    type: string
              - name: date
                in: query
                required: true
                schema:
                    type: string
              - name: location
                in: query
                required: true
                schema:
                    type: string
              - name: price
                in: query
                required: true
                schema:
                    type: number
              - name: amountTickets
                in: query
                required: true
                schema:
                    type: number
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Event"
            responses:
                "201":
                    description: Event created successfully
                "400":
                    description: Invalid event data

        get:
            summary: Get all events
            operationId: getEvents
            tags:
                - Event Service
            responses:
                "200":
                    description: Events retrieved successfully
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: "#/components/schemas/Event"

    /events/{eventId}:
        get:
            summary: Get details of an event
            operationId: getEventById
            tags:
                - Event Service
            parameters:
                - name: eventId
                  in: path
                  required: true
                  schema:
                      type: string
            responses:
                "200":
                    description: Event details retrieved successfully
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Event"
                "404":
                    description: Event not found

        put:
            summary: Update an event
            operationId: updateEvent
            tags:
                - Event Service
            parameters:
                - name: eventId
                  in: path
                  required: true
                  schema:
                      type: string
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Event"
            responses:
                "200":
                    description: Event updated successfully
                "400":
                    description: Invalid event data
                "404":
                    description: Event not found

        delete:
            summary: Delete an event
            operationId: deleteEvent
            tags:
                - Event Service
            parameters:
                - name: eventId
                  in: path
                  required: true
                  schema:
                      type: string
            responses:
                "204":
                    description: Event deleted successfully
                "404":
                    description: Event not found

    /tickets/history:
        get:
            summary: Get ticket purchase history for a user
            operationId: getTicketHistory
            tags:
                - Ticket History Service
            parameters:
                - name: userId
                  in: query
                  required: true
                  schema:
                      type: string
            responses:
                "200":
                    description: Ticket history retrieved successfully
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: "#/components/schemas/Ticket"
                "404":
                    description: User not found

    /discounts/validate:
        post:
            summary: Validate a discount code
            operationId: validateDiscount
            tags:
                - Discount Service

            parameters:
              - name: userId
                in: query
                required: true
                schema:
                    type: string
              - name: discountCode
                in: query
                required: true
                schema:
                    type: string
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Verification"
            responses:
                "200":
                    description: Discount validation successful
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/DiscountResult"

    /tickets/{ticketId}/resell:
        post:
            summary: Resell a ticket
            operationId: resellTicket
            tags:
                - Ticket Reselling Service
            parameters:
                - name: userId
                  in: query
                  required: true
                  schema:
                      type: string
                - name: ticketId
                  in: path
                  required: true
                  schema:
                      type: string
                - name: price
                  in: query
                  required: true
                  schema:
                      type: number
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/TicketResale"
            responses:
                "200":
                    description: Ticket resale successful
                "400":
                    description: Invalid resale data
                "404":
                    description: Ticket not found

    /events/{eventId}/tickets:
        get:
            summary: Get tickets for an event
            operationId: getEventTickets
            tags:
                - Ticket Service
            parameters:
                - name: eventId
                  in: path
                  required: true
                  schema:
                      type: string
            responses:
                "200":
                    description: Event tickets retrieved successfully
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: "#/components/schemas/Ticket"
                "404":
                    description: Event not found

    /tickets/{ticketId}/mobile:
        get:
            summary: Get mobile ticket details
            operationId: getMobileTicket
            tags:
                - Mobile Ticket Service
            parameters:
                - name: userId
                  in: query
                  required: true
                  schema:
                      type: string
                - name: ticketId
                  in: path
                  required: true
                  schema:
                      type: string
            responses:
                "200":
                    description: Mobile ticket details retrieved successfully
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/MobileTicket"
                "404":
                    description: Ticket not found

    /support:
        post:
            summary: Create a customer support request
            operationId: createSupportRequest
            tags:
                - Customer Support Service
            parameters:
              - name: userId
                in: query
                required: true
                schema:
                    type: string
              - name: subject
                in: query
                required: true
                schema:
                    type: string
              - name: message
                in: query
                required: true
                schema:
                    type: string
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/SupportRequest"
            responses:
                "201":
                    description: Support request created successfully
                "400":
                    description: Invalid request data

components:
    schemas:
        User:
            type: object
            properties:
                id:
                    type: string
                username:
                    type: string
                email:
                    type: string
                firstName:
                    type: string
                lastName:
                    type: string
                cuid:
                    type: string
                    
        User/{userId}/update:
            type: object
            properties:
                firstName:
                    type: string
                lastName:
                    type: string
                cuid:
                    type: string

        SignUp:
            type: object
            properties:
                username:
                    type: string
                email:
                    type: string
                password:
                    type: string
                firstName:
                    type: string
                lastName:
                    type: string
                cuid:
                    type: string

        Credentials:
            type: object
            properties:
                email:
                    type: string
                password:
                    type: string

        Notification:
            type: object
            properties:
                userId:
                    type: string
                message:
                    type: string

        Purchase:
            type: object
            properties:
                userId:
                    type: string
                amount:
                    type: number
                ticketIds:
                    type: array
                    items:
                        type: string

        PaymentMethod:
            type: object
            properties:
                userId:
                    type: string
                type:
                    type: string
                cardNumber:
                    type: string
                cardHolderName:
                    type: string
                expirationDate:
                    type: string
                cvv:
                    type: string

        TicketTransfer:
            type: object
            properties:
                ticketId:
                    type: string
                fromUserId:
                    type: string
                toUserId:
                    type: string

        Event:
            type: object
            properties:
                eventName:
                    type: string
                description:
                    type: string
                date:
                    type: string
                location:
                    type: string
                price:
                    type: number
                amountTickets:
                    type: number

        Ticket:
            type: object
            properties:
                ticketId:
                    type: string
                eventId:
                    type: string
                userId:
                    type: string
                price:
                    type: number
                status:
                    type: string

        Verification:
            type: object
            properties:
                email:
                    type: string
                username:
                    type: string
                cuid:
                    type: string
                

                
        Verification/CUID:
            type: object
            properties:
                cuid:
                    type: string
        
        Verification/Purchase:
            type: object
            properties:
                userId:
                    type: string
                amount:
                    type: number
                ticketIds:
                    type: array
                    items:
                        type: string
        
        Verification/Discount:
            type: object
            properties:
                userId:
                    type: string
                discountCode:
                    type: string


        DiscountResult:
            type: object
            properties:
                valid:
                    type: boolean
                discountPercentage:
                    type: number

        CUIDVerification:
            type: object
            properties:
                cuid:
                    type: string

        TicketResale:
            type: object
            properties:
                userId:
                    type: string
                ticketId:
                    type: string
                price:
                    type: number

        MobileTicket:
            type: object
            properties:
                userId:
                    type: string
                ticketId:
                    type: string

        SupportRequest:
            type: object
            properties:
                userId:
                    type: string
                subject:
                    type: string
                message:
                    type: string
